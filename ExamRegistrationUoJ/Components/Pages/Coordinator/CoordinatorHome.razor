@page "/coordinator-home"
@using Microsoft.AspNetCore.Authorization
@rendermode InteractiveServer
@using ExamRegistrationUoJ.Services.DBInterfaces
@using CoordinatorPages
@using System.Data
@attribute [Authorize(Policy = "IsCoordinator")]


@inject IDBServiceCoordinator1 db

<PageTitle>Home - Coordinator</PageTitle>
@if (page == null)
{
    <Elements.LoadingPanel />
}
else if (page.departments == null || page.semesters == null)
{
    <Elements.LoadingPanel />
}
else{
    <div class="coordinator">
        <section class="coordinator-path">
            <div class="path">Coordinator login &nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp; Coordinator home</div>
        </section>

        <section class="coordinator-exam-text">
            <div class="coordinator-approval-text">Directed Examinations for Coordinator Approval Process</div>
            <div class="coordinator-exam-find-text">Find an exam by</div>
        </section>

        <section class="coordinator-dropbox">
            <div class="dropbox">
                <select class="department" @onchange="async (e) => { page.departmentOpt = ((ChangeEventArgs)e).Value.ToString(); /*await page.filterExam();*/ }">
                    <option selected disabled hidden>Department</option>
                    @foreach (DataRow row in page.departments.Rows)
                    {
                        <option value="@row["id"]">@row["name"]</option>
                    }
                    <option>All</option>
                </select>
                <select class="semester" @onchange="async (e) => { page.semesterOpt = ((ChangeEventArgs)e).Value.ToString(); /*await page.filterExam();*/ }">
                    <option selected disabled hidden>Semester</option>
                    @foreach (DataRow row in page.semesters.Rows)
                    {
                        <option value="@row["id"]">@row["name"]</option>
                    }
                    <option>All</option>
                </select>
            </div>
        </section>
        @if (page.displayExams != null)
        {
            @foreach (DataRow row in page.displayExams.Rows)
            {
                <div class="exam-details-show">
                    <button class="exam-details-show-icon"><img src="Assets/Images/arrow_icon.png" /></button>
                    <div class="exam-details-show-text">
                        <span>@row["name"]_@row["semester"]_@row["batch"]  <br></span>
                        @if (@row["status"].ToString() == "1" && DateTime.Compare(Convert.ToDateTime(row["end_date"]), DateTime.Now) < 0)
                        {
                            <span style="color: #D83737;">Registration Status: Closed for students & directed to approval process</span>
                        }
                        else if (@row["status"].ToString() == "0")
                        {
                            <a href="admin-new-exam/@row["id"]" style="text-decoration: underline; font-style: italic;" class="link"><span>Registration Status: &lt; Exam not finalized; click here to edit &gt; </span></a>
                        }
                        else
                        {
                            <span>Registration Status: Open For Students.</span>
                        }
                    </div>

                </div>
            }
        }
        <div class="details">
            <section class="coordinator-exam-details">
                <div class="exam-details">
                    <div class="exam">
                        <div class="exam-description">End Semester Examination_Semester 03_E22 Batch</div>
                        <div class="exam-batch-data">
                            <p class="exam-approval">Approval Opens: 2024.04.06</p>
                            <p class="exam-closed">Closed: 2024.04.13</p>
                        </div>
                    </div>
                    <div class="view">
                        <button class="btn" onclick="toggleVisibility()" id="toggle-btn">View</button>
                    </div>
                </div>
            </section>

            <section class="coordinator-table" style="display: none;" id="show-table">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Semester</th>
                            <th>Department</th>
                            <th>Course Code</th>
                            <th>Course Name</th>
                            <th>Approval States</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td data-label="Semester">01</td>
                            <td data-label="Department">Department01</td>
                            <td data-label="Course Code">CS101</td>
                            <td data-label="Course Name">Introduction to Programming</td>
                            <td data-label="Approval States"><a href="/coordinator-approve">Complete</a></td>
                        </tr>
                        <tr>
                            <td data-label="Semester">02</td>
                            <td data-label="Department">Department02</td>
                            <td data-label="Course Code">CS101</td>
                            <td data-label="Course Name">Introduction to Programming</td>
                            <td data-label="Approval States"><a href="/coordinator-approve">Not Complete</a></td>
                        </tr>
                    </tbody>
                </table>
            </section>
        </div>
    </div>
}

<script>
    function toggleVisibility() {
        var table = document.getElementById("show-table");
        var button = document.getElementById("toggle-btn");

        if (table.style.display === "none") {
            table.style.display = "block";
            button.textContent = "Hide";
        } else {
            table.style.display = "none";
            button.textContent = "View";
        }
    }
</script>

@code {
    private CoHome page;

    protected override async Task OnInitializedAsync()
    {
        page = new CoHome(db);
        await page.init();
    }
}

