@page "/home"
@using System.Data
@using ExamRegistrationUoJ.Components.Layout
@using ExamRegistrationUoJ.PageClasses.Home
@using ExamRegistrationUoJ.Services.DBInterfaces
@inject IDBServiceHome db

<PageTitle>Home</PageTitle>

<div class="slideshow-container">
    <div class="mySlides">
        <img src="Assets/Images/university01.png" alt="Image 1">
    </div>
    <div class="mySlides">
        <img src="Assets/Images/university02.png" alt="Image 2">
    </div>
    <div class="mySlides">
        <img src="Assets/Images/university03.png" alt="Image 3">
    </div>
    <div class="mySlides">
        <img src="Assets/Images/university04.png" alt="Image 4">
    </div>

    <a class="prev" onclick="plusSlides(-1)"><img src="Assets/Images/left.png" alt="Previous"></a>
    <a class="next" onclick="plusSlides(1)"><img src="Assets/Images/right.png" alt="Next"></a>

    <div class="dot-container">
        <span class="dot" onclick="currentSlide(1)"></span>
        <span class="dot" onclick="currentSlide(2)"></span>
        <span class="dot" onclick="currentSlide(3)"></span>
        <span class="dot" onclick="currentSlide(4)"></span>
    </div>
</div>


<div class="portal">
    <div class="portal-text">
        <span>Welcome to the Exam Registration Portal</span>
        <span>Faculty of Engineering ,University of Jaffna</span>
    </div>
    <div class="register">
        -Register for your exams quickly and easily-
    </div>
</div>



<div class="service">
    <h1 class="sevice-heading">Types of Services Offered</h1>
    <div class="service-offer">
        <div class="service-offer-container">
            <img class="container01" src="Assets/Images/registration.png" />
            <span class="service-container-heading">Exam Registration</span>
            <span class="service-container-description">Simplified and</span>
            <span class="service-container-description">intuitive exam</span>
            <span class="service-container-description">registration process</span>
            <span class="service-container-description">for all students.</span>
        </div>
        <div class="service-offer-container">
            <img class="container02"  src="Assets/Images/security.png" />
            <span class="service-container-heading">Secure System</span>
            <span class="service-container-description">High-level data </span>
            <span class="service-container-description">security with </span>
            <span class="service-container-description">encryption and </span>
            <span class="service-container-description">secure </span>
            <span class="service-container-description">authentication.</span>
        </div>
        <div class="service-offer-container">
            <img class="container03" src="Assets/Images/approval.png" />
            <span class="service-container-heading">Streamlined Approval</span>
            <span class="service-container-description">Efficient approval</span>
            <span class="service-container-description">process managed by</span>
            <span class="service-container-description">coordinators and</span>
            <span class="service-container-description">advisors.</span>
        </div>
        <div class="service-offer-container">
            <img class="container04"  src="Assets/Images/manage.png" />
            <span class="service-container-heading">Manage Exams Efficiently</span>
            <span class="service-container-description">Administration tools for</span>
            <span class="service-container-description">creating, managing, and </span>
            <span class="service-container-description">printing exam details.</span>
        </div>
    </div>
    
    <div class="exams">
        <span class="exams-avalible">Exams Available for Registration</span>
        <div class="exams-contain">
            <img src="Assets/Images/left_arrow_exam.png" onclick="changeSlides(-1)"/>
            @if (examDataTable != null)
            {
                foreach (var exam in examList)
                {
                    <div class="mySlides1">
                        <div class="exams-details">
                            <span ><h4>@exam.Name    Semester @exam.SemesterId   @exam.Batch Batch</h4></span>
                            <span>Registration Status: Open for Students </span>
                        </div>
                    </div>
                        }
                        }
                        <img src="Assets/Images/right_arrow_exam.png" onclick="changeSlides(1)"/>
                    </div>
        <div class="exams-dot-container">
            @if (examDataTable != null)
            {
            for (int i = 0; i < examDataTable.Rows.Count; i++)
            {
            <span class="exams-dot" onclick="setCurrentSlide(@(i + 1))"></span>
            }
            }
        </div>
    </div>
    <div class="exam-service-des">
        <span>This system is designed to make exam registration efficient and user-friendly, facilitating a smooth and </span>
        <span>organized exam process for our students.</span>
    </div>
</div>






<script>
    var slideIndex = 1;
    var slideshowInterval;

    function showSlides(n) {
        var i;
        var slides = document.getElementsByClassName("mySlides");
        var dots = document.getElementsByClassName("dot");

        if (n > slides.length) { slideIndex = 1 }
        if (n < 1) { slideIndex = slides.length }

        for (i = 0; i < slides.length; i++) {
            slides[i].style.display = "none";
        }
        for (i = 0; i < dots.length; i++) {
            dots[i].className = dots[i].className.replace(" active", "");
        }

        slides[slideIndex - 1].style.display = "block";
        dots[slideIndex - 1].className += " active";

        clearTimeout(slideshowInterval);
        slideshowInterval = setTimeout(function () { plusSlides(1); }, 3000);
    }

    function plusSlides(n) {
        showSlides(slideIndex += n);
    }

    function currentSlide(n) {
        showSlides(slideIndex = n);
    }

    showSlides(slideIndex);



    var currentSlideIndex = 1;
    var slideShowInterval;

    document.addEventListener("DOMContentLoaded", function() {
        displaySlides(currentSlideIndex);
    });

    function displaySlides(n) {
        var i;
        var slides = document.getElementsByClassName("mySlides1");
        var dots = document.getElementsByClassName("exams-dot");

        if (n > slides.length) { currentSlideIndex = 1; }
        if (n < 1) { currentSlideIndex = slides.length; }

        for (i = 0; i < slides.length; i++) {
            slides[i].style.display = "none";
        }
        for (i = 0; i < dots.length; i++) {
            dots[i].className = dots[i].className.replace(" active", "");
        }

        slides[currentSlideIndex - 1].style.display = "block";
        dots[currentSlideIndex - 1].className += " active";

        clearInterval(slideShowInterval);
        slideShowInterval = setInterval(function() { changeSlides(1); }, 3000); // Change slide every 3 seconds
    }
    function changeSlides(n) {
        displaySlides(currentSlideIndex += n);
    }

    function setCurrentSlide(n) {
        displaySlides(currentSlideIndex = n);
    }
</script>

@code{
    private DataTable? examDataTable;
    private List<Exam> examList = new List<Exam>();
    protected override async Task OnInitializedAsync()
    {
        try
        {
            examDataTable = await db.GetActiveExamsHome();
            if (examDataTable != null)
            {
                foreach (DataRow row in examDataTable.Rows)
                {
                    examList.Add(new Exam
                    {
                        Name = row["name"].ToString(),
                        Batch = row["batch"].ToString(),
                        SemesterId = row["semester_id"].ToString()
                    });
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching exam data: {ex.Message}");
        }
        StateHasChanged();
    }
    public class Exam
    {
        public string Name { get; set; }
        public string Batch { get; set; }
        public string SemesterId { get; set; }
    }
}
