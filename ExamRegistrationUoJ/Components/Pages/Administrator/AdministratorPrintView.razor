@page "/admin-print-view/{exam_id}/{student_id}"
@using Microsoft.AspNetCore.Authorization
@using System.Data
@using ExamRegistrationUoJ.Services.DBInterfaces

@inject IDBRegistrationFetchService db
@inject IJSRuntime js

<PageTitle>Admin - print</PageTitle>

@if (regDescription is null || regCourses is null)
{
    <Elements.LoadingPanel/>
}
else if (!noStudentError)
{
    <Elements.AddressPath displayNames=displayNames linkingAddresses=addresses />
    <div class="admin-print">
            <section>
                <div class="admin-print-view">View</div>
                <div class="admin-print-register">
                <div style="text-decoration:underline;">Register For @regDescription.Rows[0]["exam_name"]</div>
                <div class="semester" style="text-decoration:underline;">@regDescription.Rows[0]["semester"]</div>
                    <div class="admin-print-batch" >
                    <div class="batch" style="text-decoration:underline;">@regDescription.Rows[0]["batch"] Batch :</div>
                    <div class="admin-print-batch-department" style="text-decoration:none;">@regDescription.Rows[0]["dept_name"]</div>
                    </div>
                </div>
            </section>
            <section>
                <div class="admin-autofill">
                    <div class="admin-autofill-reg">
                            Registration Number :
                    <div class="reg-auto">@Convert.ToString(regDescription.Rows[0]["email"]).Split('@')[0].ToUpper()</div>
                    </div>
                    <div class="admin-autofill-student-name">
                            Student Name :
                    <div class="student-name-auto">@regDescription.Rows[0]["name"]</div>
                    </div>
                </div>
            </section>
        <section class="conform-btns">

            <a class="import-btn">
                <div class="import-img"><img src="Assets/Images/upload.png" /></div>
                <div class="import-text">Import as CSV</div>
            </a>
            <a class="export-btn">
                <div class="export-img"><img src="Assets/Images/download.png" /></div>
                <div class="export-text">Export as CSV</div>
            </a>

        </section>
            <section>
                 <table class="table">
                        <thead>
                            <tr>
                        <th style="max-width:20px">Course Code</th>
                        <th style="max-width:60px">Course name</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach(DataRow row in regCourses.Rows) {
                                <tr>
                                    <td style="max-width:20px">@row["code"]</td>
                                    <td style="max-width:60px">@row["name"]</td>
                                    <td style="max-width:40px">
                                        @if (Convert.ToString(row["is_approved"]) == "1")
                                        {
                                            <button style="cursor: default">
                                                Approved
                                            </button>
                                        }
                                        else
                                        {
                                            <button style="cursor: default">
                                                Not Approved
                                            </button>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                </table>
            </section>
            <section>
                <div style="padding:10px">
                <a href="@receipt_url" style ="width:auto">
                    @if (receipt_url == null)
                    {
                        <button class="btn1" style="color: gray; cursor: not-allowed;">
                            <div class="pdf-img"><img src="Assets/Images/pdf.png" alt="PDF Icon" /></div>
                            No payment file uploaded
                        </button>
                    }
                    else
                    {
                        <button class="btn1">
                            <div class="pdf-img"><img src="Assets/Images/pdf.png" alt="PDF Icon" /></div>
                            View Payment Receipt
                        </button>
                    }

                </a>
                </div>
            
            </section>
    </div>
}
<DialogBoxes.DialogOptions Title="Student not registered" Message="The student has not registered for any courses in this exam" Opened=noStudentError ClosedCallback="@(() => js.InvokeVoidAsync("history.back"))" />

@code {
    [Parameter]
    public string exam_id { get; set; }

    [Parameter]
    public string student_id { get; set; }

    public DataTable regDescription;
    public DataTable regCourses;
    public bool noStudentError = false;

    // For addresses
    private List<string?> addresses;
    private List<string> displayNames; 

    // for view payment receipt
    string receipt_url = "";
    public bool noReceiptUrlError = false;
    //

    protected override async Task OnInitializedAsync()
    {
        addresses = new List<string?> { "admin-home", $"admin-print/{exam_id}", null };
        displayNames = new List<string> { "Administrator Home", "Print Exam Admissions", "View Admission Details" };

        int examId = int.Parse(exam_id);
        int studentId = int.Parse(student_id);

        regDescription = await db.getRegDescription(examId, studentId);
        regCourses = await db.getRegCourses(examId, studentId);

        if (regDescription is null || regCourses is null) noStudentError = true;
        else if (regCourses.Rows.Count < 1) noStudentError = true;

        // for view payment receipt
        receipt_url = await db.getPaymentReceiptUrl(examId, studentId);
    //
    }
}