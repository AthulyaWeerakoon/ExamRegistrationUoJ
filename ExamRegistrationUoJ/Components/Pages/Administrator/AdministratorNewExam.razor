@page "/admin-new-exam/{exam_id:int?}"
@using Microsoft.AspNetCore.Authorization
@using AdminPages
@using Services.DBInterfaces
@using System.Data
@using Microsoft.JSInterop
@rendermode InteractiveServer
@attribute [Authorize(Policy = "IsAdmin")]

@inject IDBServiceAdmin1 db

<PageTitle>New Exam</PageTitle>

@if (page == null)
{
    <Elements.LoadingPanel/>
}
else if(page.coursesFromDepts == null || page.departmentSelect == null) {
    <Elements.LoadingPanel/>
}
else {
    <div class="AdministratorNewExam" id="add-dialog-box" style="display:block">
        <div class="add-exam" style="text-decoration: underline;">
            Add a new exam
        </div>
        <div class="exam-details">
            <div class="exam-row exam-title">
                <span>Exam Title</span>
                <span class="colon">:</span>
                <input type="text" placeholder="Exam Title" />
            </div>
            <div class="exam-row exam-semester">
                <span>Semester</span>
                <span class="colon">:</span>
                <select @onchange="async (e) => { page.semesterOpt = ((ChangeEventArgs)e).Value.ToString(); }">
                    <option selected disabled hidden>Semester</option>
                    <option value="semester1">Semester 1</option>
                    <option value="semester2">Semester 2</option>
                    <option value="semester3">Semester 3</option>
                    <option value="semester4">Semester 4</option>
                    <option value="semester5">Semester 5</option>
                    <option value="semesters--extended">Semester 05 Extended</option>
                    <option value="semester6">Semester 6</option>
                    <option value="semester7">Semester 7</option>
                    <option value="semester8">Semester 8</option>
                </select>
            </div>
            <div class="exam-row exam-batch">
                <span>Batch</span>
                <span class="colon">:</span>
                <input type="text" placeholder="Batch"/>
            </div>
            <div class="exam-row exam-batch">
                <div class="vertical-span">
                    <span>Time extention for</span>
                    <span>Coordinator approval</span>
                </div>
                <span class="colon">:</span>
                <input type="number" min="1" max="16" placeholder="Weeks"/>
            </div>
            <div class="exam-row exam-batch">
                <div class="vertical-span">
                    <span>Time extention for</span>
                    <span>Advisor approval</span>
                </div>
                <span class="colon">:</span>
                <input type="number" min="1" max="16" placeholder="Weeks" />
            </div>
            <div class="exam-row exam-closing-date">
                <div class="vertical-span">
                    <span>Registration Closing Date</span>
                    <span>(For Students)</span>
                </div>
                <span class="colon">:</span>
                <input type="date" class="date-input">

            </div>
        </div>

        <div class="add-exam-table" id="add-table" style="display:block">
            <div class="department-details">
                <span class="department-name">Department:</span>
                <select>
                    <option disabled hidden>Department</option>
                    <option value="department1">Inter disciplinary Studies</option>
                    <option value="department2">Civil Engineering</option>
                    <option selected value="department2">Computer Engineering</option>
                    <option value="department2">Electrical and Electronics Engineering</option>
                    <option value="department2">Mechanical and Process Engineering</option>
                    <option value="department2">Department of Slow Jam Studies</option>
                </select>
            </div>

            <div class="exam-department-table-block" id="add-table">
                <table class="exam-department-table">
                    <tr style="background-color: rgba(66, 208, 239, 1);">
                        <th class="course-code">Course Code</th>
                        <th class="course">Course</th>
                        <th class="course-co-ordinator">Course Co-ordinator (email)</th>
                        <th class="course"></th>
                    </tr>
                    <!-- repeting segment -->
                    <tr>
                        <td>EC4040</td>
                        <td>Signal and System</td>
                        <td><Elements.AutofillInput AutofillSuggestions="emailList"/></td>
                        <td><img src="Assets/Images/Indeterminate_Checkbox.png" width="40px" height="40px"/></td>
                    </tr>
                    <!-- repeating segment over-->
                    <tr>
                        <td colspan="4">
                            <div class="add-item-dialog ">
                                <button class="addbutton" onclick="hideAddItemDialog()"><img src="Assets/Images/add_buttom.png" class="addbutton" /></button>
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
            <div class="delete-department" style="padding-bottom:10px; margin-bottom:10px;">
                <button class="delete-department-button" onclick="deleteDepartmentTable()">
                    <img src="Assets/Images/Indeterminate_Checkbox.png" class="delete-department-button" style="width: 36px; height: 33px;" />
                </button>
                <span>Department</span>
            </div>

        </div>

        <div class="add-exam-table" id="add-table" style="display:block">
            <div class="department-details">
                <span class="department-name">Department:</span>
                <select>
                    <option selected disabled hidden>Department</option>
                    <option value="department1">Inter disciplinary Studies</option>
                    <option value="department2">Civil Engineering</option>
                    <option value="department2">Computer Engineering</option>
                    <option value="department2">Electrical and Electronics Engineering</option>
                    <option value="department2">Mechanical and Process Engineering</option>
                    <option value="department2">Department of Slow Jam Studies</option>
                </select>
            </div>

            <div class="exam-department-table-block" id="add-table">
                <table class="exam-department-table">
                    <tr style="background-color: rgba(66, 208, 239, 1);">
                        <th class="course-code">Course Code</th>
                        <th class="course">Course</th>
                        <th class="course-co-ordinator">Course Co-ordinator (email)</th>
                        <th class="course"></th>
                    </tr>
                    <tr>
                        <td colspan="4">
                            <div class="add-item-dialog ">
                                <button class="addbutton" onclick="hideAddItemDialog()"><img src="Assets/Images/add_buttom.png" class="addbutton" /></button>
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
            <div class="delete-department" style="padding-bottom:10px; margin-bottom:10px;">
                <button class="delete-department-button" onclick="deleteDepartmentTable()">
                    <img src="Assets/Images/Indeterminate_Checkbox.png" class="delete-department-button" style="width: 36px; height: 33px;" />
                </button>
                <span>Department</span>
            </div>

        </div>
        <div class="add-department">
            <button class="add-department-button" onclick="addDepartmentTable()"><img src="Assets/Images/add_department.png" class="add-department-button" /></button>
            <span>Department</span>
        </div>


        <div class="save-conform">
            <div class="save">
                <a class="add-exam-button" style="text-decoration: none; color: black;"><img src="Assets/Images/Save.png" /><span>Save &#38; Quit</span></a>
            </div>
            <div class="conform">
                <a href="admin-home" class="add-exam-button" style="text-decoration: none; color: black;"><img src="Assets/Images/Checked_Checkbox.png" /><span>Confirm</span></a>
            </div>
        </div>
    </div>


    <div class="dialog-box" id="dialog-box" style="display:none">
        <div class="message-box">
            <div class="container">
                <div class="text">Select Course Code:</div>
                <select>
                    <option selected disabled hidden>Course code </option>
                    <option>EC 1011</option>
                    <option>EC 1020</option>
                    <option>EC2010</option>
                    <option>EC3011</option>
                    <option>EC4010</option>
                    <option>EC4040</option>
                    <option>EC4050</option>
                    <option>EC4060</option>
                    <option>EC4070</option>
                    <option>EC4021</option>
                    <option>EC4030</option>
                    <option>EC5010</option>
                    <option>EC5020</option>
                    <option>EC5030</option>
                    <option>EC5070</option>
                </select>
            </div>
            <div class="add-course">
                <button class="add-course-button" onclick="showAddItemDialog()"><img src="Assets/Images/add_department.png" /></button>
                <span>Add course</span>
            </div>
        </div>
    </div>

    <DialogBoxes.DialogOptions Title="Save Unsuccessful" Message="Complete the Exam Description properly before saving the draft" Opened="saveUnsuccessfulMsg" ClosedCallback="() => { saveUnsuccessfulMsg = false; StateHasChanged(); }" />
    <DialogBoxes.DialogOptions Title="Course Addition Failed" Message="Select a department before adding a course" Opened="courseAddFailedMsg" ClosedCallback="() => { courseAddFailedMsg = false; StateHasChanged(); }" />
    <DialogBoxes.DialogOptions Title="Department Addition Failed" Message="Select department name for all previously added departments before attempting to add more" Opened="deptAddFailedMsg" ClosedCallback="() => { deptAddFailedMsg = false; StateHasChanged(); }" />
    <DialogBoxes.DialogOptions Title="Exam Confirmation Failed" Message="Fill the exam description properly and add at least one course per added departments" Opened="examConfirmFailedMsg" ClosedCallback="() => { examConfirmFailedMsg = false; StateHasChanged(); }" />
    <DialogBoxes.DialogOptions Title="Confirm Department Removal"
                               Message="@($"Are you sure you want to remove department {removeDeptName}?")"
                               Buttons="removeDeptOpts"
                               Opened="removeDeptMsg"
                               ActionCallback="(i) => { if(i != 0) removeDeptMsg = false; StateHasChanged(); }"
                               ClosedCallback="() => { removeDeptMsg = false; StateHasChanged(); }" />
    <DialogBoxes.DialogOptions Title="Confirm Exam Publication" 
                               Message="Are you sure you want to confirm publication of the exam? (Note: this action is irreversible and an exam can no logner be edited after it's published)" 
                               Buttons="confirmExamConfirmationOpts" 
                               Opened="examConfirmFailedMsg"
                               ActionCallback="(i) => { if(i != 0) examConfirmFailedMsg = false; StateHasChanged(); }"
                               ClosedCallback="() => { examConfirmFailedMsg = false; StateHasChanged(); }"
                               />
}

@code {
    [Parameter]
    public int? exam_id { get; set; }

    AdminNewExam page;

    public bool saveUnsuccessfulMsg = false;

    public bool courseAddFailedMsg = false;

    public bool deptAddFailedMsg = false;

    public bool examConfirmFailedMsg = false;

    public bool removeDeptMsg = false;
    public string removeDeptName = "";
    public string[] removeDeptOpts = { "Yes, remove", "No, cancel" };

    public bool confirmExamConfirmation = false;
    public string[] confirmExamConfirmationOpts = { "Yes", "No, cancel" };

    private bool blocking = false;
    private List<string> emailList = new List<string> ();

    protected override async Task OnInitializedAsync()
    {
        page = new AdminNewExam(db, exam_id);
        await page.init();
        emailList = page.coordinators.AsEnumerable().Select(row => Convert.ToString(row["email"])).ToList();
    }

    private void toggleBlocking()
    {
        blocking = (blocking) ? false : true;
        StateHasChanged();
    }
}
